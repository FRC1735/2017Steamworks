// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1735.Steamworks2017.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import org.usfirst.frc1735.Steamworks2017.subsystems.*;

/**
 *
 */
public class AutonomousHopperAndShoot extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutonomousHopperAndShoot() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
 
    // Drive forward until we are even with the hopper kickbar
	addSequential(new DriveWithProgram(DriveTrain.DrivetrainMode.kTraction,
			3, // timeout
			1.0,70.75, // drive MagDir, dist
			0,0, // crab MagDir, dist
			0)); // Angle to turn

	// Crab over to the bar
	addSequential(new DriveWithProgram(DriveTrain.DrivetrainMode.kMecanum,
			4, // timeout
			0,0, // drive MagDir, dist
			01.0,33.75, // crab MagDir, dist
			0)); // Angle to turn
	
	// Spin up the shooter
	addSequential(new ShooterStart());
	// Wait for 3 seconds for it to come up to speed and load a few balls in
	addSequential(new FeederStart(1.0), 7); // Run the feeder for seven seconds.  Tune this to terminate near the end of autonomous period.  Stops automatically.
	addSequential(new ShooterStop()); // Kill the shooter motors.  They will coast for a while.
	
	
    } 
}
