// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1735.Steamworks2017.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc1735.Steamworks2017.Robot;

/**
 *
 */
public class ForceMecanumMode extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ForceMecanumMode() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
    	
    	// **NOTE ON USAGE INTENT:
    	// This command explicitly does not 'require' the DriveTrain subsystem, because
    	// we don't want the continuous execution of this command to interrupt the DriveWithJoysticks default command.
    	// (otherwise, pressing the button would halt the drivetrain until the command stopped!!)
    	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	// While the command is firt activated, force mecanum mode.
    	// (overrides the default desired behavior of "generally be in Traction mode")
    	Robot.driveTrain.setMecanumMode();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	// Do nothing (we choose to change modes on init and end (effectively "press" and "release" of the triggering button),
    	// rather than forcing the mode on every timestep (which would eat computes)
    	// NOTE:
    	// This optimization allows the user to be holding the button for ForceMecanum and then pressing the ToggleDrivetrain button.
    	// This would cause the drivetrain to go to traction mode even though the ForceMecanum button is still held.
    	// This really should not be done by the driver, and preventing such behavior by forcing mecanum every timestep seems more compute intensive than it is worth.
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false; // Command terminates if interrupted by releasing the button
    }

    // Called once after isFinished returns true
    protected void end() {
    	// Regardless of how we were terminated, go back to Traction mode (the default desired behavior)
    	Robot.driveTrain.setTractionMode();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	// Releasing the button will cause the command to be interrupted
    	end();
    }
}
